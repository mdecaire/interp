Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER possibleparam RETURNS type ';'
    3                | error ';'

    4 possibleparam: parameters
    5              | %empty

    6 parameters: parameter
    7           | parameters ',' parameter

    8 parameter: IDENTIFIER ':' type

    9 optional_variable: optional_variable variable
   10                  | %empty

   11 variable: IDENTIFIER ':' type IS statement_
   12         | error ';'

   13 type: REAL
   14     | INTEGER
   15     | BOOLEAN

   16 body: BEGIN_ statement_ END ';'

   17 statement_: statement ';'
   18           | error ';'

   19 statement: expression
   20          | REDUCE operator reductions ENDREDUCE
   21          | IF expression THEN statement_ ELSE statement_ ENDIF
   22          | CASE expression IS case_ OTHERS ARROW statement_ ENDCASE

   23 case_: case_ case
   24      | %empty

   25 case: WHEN INT_LITERAL ARROW statement_

   26 operator: ADDOP
   27         | MULOP

   28 reductions: reductions statement_
   29           | %empty

   30 expression: expression OROP andexp
   31           | andexp

   32 andexp: andexp ANDOP relation
   33       | relation

   34 relation: relation RELOP term
   35         | term

   36 term: term ADDOP remainder
   37     | remainder

   38 remainder: remainder REMOP factor
   39          | factor

   40 factor: factor MULOP exponent
   41       | exponent

   42 exponent: notst EXPOP exponent
   43         | notst

   44 notst: NOTOP primary
   45      | primary

   46 primary: '(' expression ')'
   47        | BOOL_LITERAL
   48        | REAL_LITERAL
   49        | INT_LITERAL
   50        | IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
'(' (40) 46
')' (41) 46
',' (44) 7
':' (58) 8 11
';' (59) 2 3 12 16 17 18
error (256) 3 12 18
IDENTIFIER (258) 2 8 11 50
BOOL_LITERAL (259) 47
INT_LITERAL (260) 25 49
REAL_LITERAL (261) 48
ADDOP (262) 26 36
MULOP (263) 27 40
RELOP (264) 34
REMOP (265) 38
EXPOP (266) 42
OROP (267) 30
ANDOP (268) 32
NOTOP (269) 44
BEGIN_ (270) 16
END (271) 16
ENDREDUCE (272) 20
FUNCTION (273) 2
IS (274) 11 22
REDUCE (275) 20
RETURNS (276) 2
ARROW (277) 22 25
BOOLEAN (278) 15
INTEGER (279) 14
REAL (280) 13
IF (281) 21
THEN (282) 21
ELSE (283) 21
ENDIF (284) 21
CASE (285) 22
WHEN (286) 25
ENDCASE (287) 22
OTHERS (288) 22


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
function (40)
    on left: 1, on right: 0
function_header (41)
    on left: 2 3, on right: 1
possibleparam (42)
    on left: 4 5, on right: 2
parameters (43)
    on left: 6 7, on right: 4 7
parameter (44)
    on left: 8, on right: 6 7
optional_variable (45)
    on left: 9 10, on right: 1 9
variable (46)
    on left: 11 12, on right: 9
type (47)
    on left: 13 14 15, on right: 2 8 11
body (48)
    on left: 16, on right: 1
statement_ (49)
    on left: 17 18, on right: 11 16 21 22 25 28
statement (50)
    on left: 19 20 21 22, on right: 17
case_ (51)
    on left: 23 24, on right: 22 23
case (52)
    on left: 25, on right: 23
operator (53)
    on left: 26 27, on right: 20
reductions (54)
    on left: 28 29, on right: 20 28
expression (55)
    on left: 30 31, on right: 19 21 22 30 46
andexp (56)
    on left: 32 33, on right: 30 31 32
relation (57)
    on left: 34 35, on right: 32 33 34
term (58)
    on left: 36 37, on right: 34 35 36
remainder (59)
    on left: 38 39, on right: 36 37 38
factor (60)
    on left: 40 41, on right: 38 39 40
exponent (61)
    on left: 42 43, on right: 40 41 42
notst (62)
    on left: 44 45, on right: 42 43
primary (63)
    on left: 46 47 48 49 50, on right: 44 45


State 0

    0 $accept: . function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function         go to state 3
    function_header  go to state 4


State 1

    3 function_header: error . ';'

    ';'  shift, and go to state 5


State 2

    2 function_header: FUNCTION . IDENTIFIER possibleparam RETURNS type ';'

    IDENTIFIER  shift, and go to state 6


State 3

    0 $accept: function . $end

    $end  shift, and go to state 7


State 4

    1 function: function_header . optional_variable body

    $default  reduce using rule 10 (optional_variable)

    optional_variable  go to state 8


State 5

    3 function_header: error ';' .

    $default  reduce using rule 3 (function_header)


State 6

    2 function_header: FUNCTION IDENTIFIER . possibleparam RETURNS type ';'

    IDENTIFIER  shift, and go to state 9

    $default  reduce using rule 5 (possibleparam)

    possibleparam  go to state 10
    parameters     go to state 11
    parameter      go to state 12


State 7

    0 $accept: function $end .

    $default  accept


State 8

    1 function: function_header optional_variable . body
    9 optional_variable: optional_variable . variable

    error       shift, and go to state 13
    IDENTIFIER  shift, and go to state 14
    BEGIN_      shift, and go to state 15

    variable  go to state 16
    body      go to state 17


State 9

    8 parameter: IDENTIFIER . ':' type

    ':'  shift, and go to state 18


State 10

    2 function_header: FUNCTION IDENTIFIER possibleparam . RETURNS type ';'

    RETURNS  shift, and go to state 19


State 11

    4 possibleparam: parameters .
    7 parameters: parameters . ',' parameter

    ','  shift, and go to state 20

    $default  reduce using rule 4 (possibleparam)


State 12

    6 parameters: parameter .

    $default  reduce using rule 6 (parameters)


State 13

   12 variable: error . ';'

    ';'  shift, and go to state 21


State 14

   11 variable: IDENTIFIER . ':' type IS statement_

    ':'  shift, and go to state 22


State 15

   16 body: BEGIN_ . statement_ END ';'

    error         shift, and go to state 23
    IDENTIFIER    shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    NOTOP         shift, and go to state 28
    REDUCE        shift, and go to state 29
    IF            shift, and go to state 30
    CASE          shift, and go to state 31
    '('           shift, and go to state 32

    statement_  go to state 33
    statement   go to state 34
    expression  go to state 35
    andexp      go to state 36
    relation    go to state 37
    term        go to state 38
    remainder   go to state 39
    factor      go to state 40
    exponent    go to state 41
    notst       go to state 42
    primary     go to state 43


State 16

    9 optional_variable: optional_variable variable .

    $default  reduce using rule 9 (optional_variable)


State 17

    1 function: function_header optional_variable body .

    $default  reduce using rule 1 (function)


State 18

    8 parameter: IDENTIFIER ':' . type

    BOOLEAN  shift, and go to state 44
    INTEGER  shift, and go to state 45
    REAL     shift, and go to state 46

    type  go to state 47


State 19

    2 function_header: FUNCTION IDENTIFIER possibleparam RETURNS . type ';'

    BOOLEAN  shift, and go to state 44
    INTEGER  shift, and go to state 45
    REAL     shift, and go to state 46

    type  go to state 48


State 20

    7 parameters: parameters ',' . parameter

    IDENTIFIER  shift, and go to state 9

    parameter  go to state 49


State 21

   12 variable: error ';' .

    $default  reduce using rule 12 (variable)


State 22

   11 variable: IDENTIFIER ':' . type IS statement_

    BOOLEAN  shift, and go to state 44
    INTEGER  shift, and go to state 45
    REAL     shift, and go to state 46

    type  go to state 50


State 23

   18 statement_: error . ';'

    ';'  shift, and go to state 51


State 24

   50 primary: IDENTIFIER .

    $default  reduce using rule 50 (primary)


State 25

   47 primary: BOOL_LITERAL .

    $default  reduce using rule 47 (primary)


State 26

   49 primary: INT_LITERAL .

    $default  reduce using rule 49 (primary)


State 27

   48 primary: REAL_LITERAL .

    $default  reduce using rule 48 (primary)


State 28

   44 notst: NOTOP . primary

    IDENTIFIER    shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    '('           shift, and go to state 32

    primary  go to state 52


State 29

   20 statement: REDUCE . operator reductions ENDREDUCE

    ADDOP  shift, and go to state 53
    MULOP  shift, and go to state 54

    operator  go to state 55


State 30

   21 statement: IF . expression THEN statement_ ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    NOTOP         shift, and go to state 28
    '('           shift, and go to state 32

    expression  go to state 56
    andexp      go to state 36
    relation    go to state 37
    term        go to state 38
    remainder   go to state 39
    factor      go to state 40
    exponent    go to state 41
    notst       go to state 42
    primary     go to state 43


State 31

   22 statement: CASE . expression IS case_ OTHERS ARROW statement_ ENDCASE

    IDENTIFIER    shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    NOTOP         shift, and go to state 28
    '('           shift, and go to state 32

    expression  go to state 57
    andexp      go to state 36
    relation    go to state 37
    term        go to state 38
    remainder   go to state 39
    factor      go to state 40
    exponent    go to state 41
    notst       go to state 42
    primary     go to state 43


State 32

   46 primary: '(' . expression ')'

    IDENTIFIER    shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    NOTOP         shift, and go to state 28
    '('           shift, and go to state 32

    expression  go to state 58
    andexp      go to state 36
    relation    go to state 37
    term        go to state 38
    remainder   go to state 39
    factor      go to state 40
    exponent    go to state 41
    notst       go to state 42
    primary     go to state 43


State 33

   16 body: BEGIN_ statement_ . END ';'

    END  shift, and go to state 59


State 34

   17 statement_: statement . ';'

    ';'  shift, and go to state 60


State 35

   19 statement: expression .
   30 expression: expression . OROP andexp

    OROP  shift, and go to state 61

    $default  reduce using rule 19 (statement)


State 36

   31 expression: andexp .
   32 andexp: andexp . ANDOP relation

    ANDOP  shift, and go to state 62

    $default  reduce using rule 31 (expression)


State 37

   33 andexp: relation .
   34 relation: relation . RELOP term

    RELOP  shift, and go to state 63

    $default  reduce using rule 33 (andexp)


State 38

   35 relation: term .
   36 term: term . ADDOP remainder

    ADDOP  shift, and go to state 64

    $default  reduce using rule 35 (relation)


State 39

   37 term: remainder .
   38 remainder: remainder . REMOP factor

    REMOP  shift, and go to state 65

    $default  reduce using rule 37 (term)


State 40

   39 remainder: factor .
   40 factor: factor . MULOP exponent

    MULOP  shift, and go to state 66

    $default  reduce using rule 39 (remainder)


State 41

   41 factor: exponent .

    $default  reduce using rule 41 (factor)


State 42

   42 exponent: notst . EXPOP exponent
   43         | notst .

    EXPOP  shift, and go to state 67

    $default  reduce using rule 43 (exponent)


State 43

   45 notst: primary .

    $default  reduce using rule 45 (notst)


State 44

   15 type: BOOLEAN .

    $default  reduce using rule 15 (type)


State 45

   14 type: INTEGER .

    $default  reduce using rule 14 (type)


State 46

   13 type: REAL .

    $default  reduce using rule 13 (type)


State 47

    8 parameter: IDENTIFIER ':' type .

    $default  reduce using rule 8 (parameter)


State 48

    2 function_header: FUNCTION IDENTIFIER possibleparam RETURNS type . ';'

    ';'  shift, and go to state 68


State 49

    7 parameters: parameters ',' parameter .

    $default  reduce using rule 7 (parameters)


State 50

   11 variable: IDENTIFIER ':' type . IS statement_

    IS  shift, and go to state 69


State 51

   18 statement_: error ';' .

    $default  reduce using rule 18 (statement_)


State 52

   44 notst: NOTOP primary .

    $default  reduce using rule 44 (notst)


State 53

   26 operator: ADDOP .

    $default  reduce using rule 26 (operator)


State 54

   27 operator: MULOP .

    $default  reduce using rule 27 (operator)


State 55

   20 statement: REDUCE operator . reductions ENDREDUCE

    $default  reduce using rule 29 (reductions)

    reductions  go to state 70


State 56

   21 statement: IF expression . THEN statement_ ELSE statement_ ENDIF
   30 expression: expression . OROP andexp

    OROP  shift, and go to state 61
    THEN  shift, and go to state 71


State 57

   22 statement: CASE expression . IS case_ OTHERS ARROW statement_ ENDCASE
   30 expression: expression . OROP andexp

    OROP  shift, and go to state 61
    IS    shift, and go to state 72


State 58

   30 expression: expression . OROP andexp
   46 primary: '(' expression . ')'

    OROP  shift, and go to state 61
    ')'   shift, and go to state 73


State 59

   16 body: BEGIN_ statement_ END . ';'

    ';'  shift, and go to state 74


State 60

   17 statement_: statement ';' .

    $default  reduce using rule 17 (statement_)


State 61

   30 expression: expression OROP . andexp

    IDENTIFIER    shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    NOTOP         shift, and go to state 28
    '('           shift, and go to state 32

    andexp     go to state 75
    relation   go to state 37
    term       go to state 38
    remainder  go to state 39
    factor     go to state 40
    exponent   go to state 41
    notst      go to state 42
    primary    go to state 43


State 62

   32 andexp: andexp ANDOP . relation

    IDENTIFIER    shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    NOTOP         shift, and go to state 28
    '('           shift, and go to state 32

    relation   go to state 76
    term       go to state 38
    remainder  go to state 39
    factor     go to state 40
    exponent   go to state 41
    notst      go to state 42
    primary    go to state 43


State 63

   34 relation: relation RELOP . term

    IDENTIFIER    shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    NOTOP         shift, and go to state 28
    '('           shift, and go to state 32

    term       go to state 77
    remainder  go to state 39
    factor     go to state 40
    exponent   go to state 41
    notst      go to state 42
    primary    go to state 43


State 64

   36 term: term ADDOP . remainder

    IDENTIFIER    shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    NOTOP         shift, and go to state 28
    '('           shift, and go to state 32

    remainder  go to state 78
    factor     go to state 40
    exponent   go to state 41
    notst      go to state 42
    primary    go to state 43


State 65

   38 remainder: remainder REMOP . factor

    IDENTIFIER    shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    NOTOP         shift, and go to state 28
    '('           shift, and go to state 32

    factor    go to state 79
    exponent  go to state 41
    notst     go to state 42
    primary   go to state 43


State 66

   40 factor: factor MULOP . exponent

    IDENTIFIER    shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    NOTOP         shift, and go to state 28
    '('           shift, and go to state 32

    exponent  go to state 80
    notst     go to state 42
    primary   go to state 43


State 67

   42 exponent: notst EXPOP . exponent

    IDENTIFIER    shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    NOTOP         shift, and go to state 28
    '('           shift, and go to state 32

    exponent  go to state 81
    notst     go to state 42
    primary   go to state 43


State 68

    2 function_header: FUNCTION IDENTIFIER possibleparam RETURNS type ';' .

    $default  reduce using rule 2 (function_header)


State 69

   11 variable: IDENTIFIER ':' type IS . statement_

    error         shift, and go to state 23
    IDENTIFIER    shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    NOTOP         shift, and go to state 28
    REDUCE        shift, and go to state 29
    IF            shift, and go to state 30
    CASE          shift, and go to state 31
    '('           shift, and go to state 32

    statement_  go to state 82
    statement   go to state 34
    expression  go to state 35
    andexp      go to state 36
    relation    go to state 37
    term        go to state 38
    remainder   go to state 39
    factor      go to state 40
    exponent    go to state 41
    notst       go to state 42
    primary     go to state 43


State 70

   20 statement: REDUCE operator reductions . ENDREDUCE
   28 reductions: reductions . statement_

    error         shift, and go to state 23
    IDENTIFIER    shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    NOTOP         shift, and go to state 28
    ENDREDUCE     shift, and go to state 83
    REDUCE        shift, and go to state 29
    IF            shift, and go to state 30
    CASE          shift, and go to state 31
    '('           shift, and go to state 32

    statement_  go to state 84
    statement   go to state 34
    expression  go to state 35
    andexp      go to state 36
    relation    go to state 37
    term        go to state 38
    remainder   go to state 39
    factor      go to state 40
    exponent    go to state 41
    notst       go to state 42
    primary     go to state 43


State 71

   21 statement: IF expression THEN . statement_ ELSE statement_ ENDIF

    error         shift, and go to state 23
    IDENTIFIER    shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    NOTOP         shift, and go to state 28
    REDUCE        shift, and go to state 29
    IF            shift, and go to state 30
    CASE          shift, and go to state 31
    '('           shift, and go to state 32

    statement_  go to state 85
    statement   go to state 34
    expression  go to state 35
    andexp      go to state 36
    relation    go to state 37
    term        go to state 38
    remainder   go to state 39
    factor      go to state 40
    exponent    go to state 41
    notst       go to state 42
    primary     go to state 43


State 72

   22 statement: CASE expression IS . case_ OTHERS ARROW statement_ ENDCASE

    $default  reduce using rule 24 (case_)

    case_  go to state 86


State 73

   46 primary: '(' expression ')' .

    $default  reduce using rule 46 (primary)


State 74

   16 body: BEGIN_ statement_ END ';' .

    $default  reduce using rule 16 (body)


State 75

   30 expression: expression OROP andexp .
   32 andexp: andexp . ANDOP relation

    ANDOP  shift, and go to state 62

    $default  reduce using rule 30 (expression)


State 76

   32 andexp: andexp ANDOP relation .
   34 relation: relation . RELOP term

    RELOP  shift, and go to state 63

    $default  reduce using rule 32 (andexp)


State 77

   34 relation: relation RELOP term .
   36 term: term . ADDOP remainder

    ADDOP  shift, and go to state 64

    $default  reduce using rule 34 (relation)


State 78

   36 term: term ADDOP remainder .
   38 remainder: remainder . REMOP factor

    REMOP  shift, and go to state 65

    $default  reduce using rule 36 (term)


State 79

   38 remainder: remainder REMOP factor .
   40 factor: factor . MULOP exponent

    MULOP  shift, and go to state 66

    $default  reduce using rule 38 (remainder)


State 80

   40 factor: factor MULOP exponent .

    $default  reduce using rule 40 (factor)


State 81

   42 exponent: notst EXPOP exponent .

    $default  reduce using rule 42 (exponent)


State 82

   11 variable: IDENTIFIER ':' type IS statement_ .

    $default  reduce using rule 11 (variable)


State 83

   20 statement: REDUCE operator reductions ENDREDUCE .

    $default  reduce using rule 20 (statement)


State 84

   28 reductions: reductions statement_ .

    $default  reduce using rule 28 (reductions)


State 85

   21 statement: IF expression THEN statement_ . ELSE statement_ ENDIF

    ELSE  shift, and go to state 87


State 86

   22 statement: CASE expression IS case_ . OTHERS ARROW statement_ ENDCASE
   23 case_: case_ . case

    WHEN    shift, and go to state 88
    OTHERS  shift, and go to state 89

    case  go to state 90


State 87

   21 statement: IF expression THEN statement_ ELSE . statement_ ENDIF

    error         shift, and go to state 23
    IDENTIFIER    shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    NOTOP         shift, and go to state 28
    REDUCE        shift, and go to state 29
    IF            shift, and go to state 30
    CASE          shift, and go to state 31
    '('           shift, and go to state 32

    statement_  go to state 91
    statement   go to state 34
    expression  go to state 35
    andexp      go to state 36
    relation    go to state 37
    term        go to state 38
    remainder   go to state 39
    factor      go to state 40
    exponent    go to state 41
    notst       go to state 42
    primary     go to state 43


State 88

   25 case: WHEN . INT_LITERAL ARROW statement_

    INT_LITERAL  shift, and go to state 92


State 89

   22 statement: CASE expression IS case_ OTHERS . ARROW statement_ ENDCASE

    ARROW  shift, and go to state 93


State 90

   23 case_: case_ case .

    $default  reduce using rule 23 (case_)


State 91

   21 statement: IF expression THEN statement_ ELSE statement_ . ENDIF

    ENDIF  shift, and go to state 94


State 92

   25 case: WHEN INT_LITERAL . ARROW statement_

    ARROW  shift, and go to state 95


State 93

   22 statement: CASE expression IS case_ OTHERS ARROW . statement_ ENDCASE

    error         shift, and go to state 23
    IDENTIFIER    shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    NOTOP         shift, and go to state 28
    REDUCE        shift, and go to state 29
    IF            shift, and go to state 30
    CASE          shift, and go to state 31
    '('           shift, and go to state 32

    statement_  go to state 96
    statement   go to state 34
    expression  go to state 35
    andexp      go to state 36
    relation    go to state 37
    term        go to state 38
    remainder   go to state 39
    factor      go to state 40
    exponent    go to state 41
    notst       go to state 42
    primary     go to state 43


State 94

   21 statement: IF expression THEN statement_ ELSE statement_ ENDIF .

    $default  reduce using rule 21 (statement)


State 95

   25 case: WHEN INT_LITERAL ARROW . statement_

    error         shift, and go to state 23
    IDENTIFIER    shift, and go to state 24
    BOOL_LITERAL  shift, and go to state 25
    INT_LITERAL   shift, and go to state 26
    REAL_LITERAL  shift, and go to state 27
    NOTOP         shift, and go to state 28
    REDUCE        shift, and go to state 29
    IF            shift, and go to state 30
    CASE          shift, and go to state 31
    '('           shift, and go to state 32

    statement_  go to state 97
    statement   go to state 34
    expression  go to state 35
    andexp      go to state 36
    relation    go to state 37
    term        go to state 38
    remainder   go to state 39
    factor      go to state 40
    exponent    go to state 41
    notst       go to state 42
    primary     go to state 43


State 96

   22 statement: CASE expression IS case_ OTHERS ARROW statement_ . ENDCASE

    ENDCASE  shift, and go to state 98


State 97

   25 case: WHEN INT_LITERAL ARROW statement_ .

    $default  reduce using rule 25 (case)


State 98

   22 statement: CASE expression IS case_ OTHERS ARROW statement_ ENDCASE .

    $default  reduce using rule 22 (statement)
